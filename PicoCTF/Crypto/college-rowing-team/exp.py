import gmpy2
import binascii
import time
from Crypto.Util.number import long_to_bytes
from tqdm import trange

n = 19928073532667002674271126242460424264678302463110874370548818138542019092428748404842979311103440183470341730391245820461360581989271804887458051852613435204857098017249255006951581790650329570721461311276897625064269097611296994752278236116594018565111511706468113995740555227723579333780825133947488456834006391113674719045468317242000478209048237262125983164844808938206933531765230386987211125968246026721916610034981306385276396371953013685639581894384852327010462345466019070637326891690322855254242653309376909918630162231006323084408189767751387637751885504520154800908122596020421247199812233589471220112129
e = 3
res = 0   #resæ˜¯m
c = 86893891006724995283854813014390877172735163869036169496565461737741926829273252426484138905500712279566881578262823696620415864916590651557711035982810690227377784525466265776922625254135896966472905776613722370871107640819140591627040592402867504449339363559108090452141753194477174987394954897424151839006206598186417617292433784471465084923195909989
print(time.asctime())
for k in trange(200000000):
    if gmpy2.iroot(c+n*k,3)[1] == 1:
        res = gmpy2.iroot(c+n*k,3)[0]
        print(k,res)
        print(long_to_bytes(res))  
        print(time.asctime())
        break